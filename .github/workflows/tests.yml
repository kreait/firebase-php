name: Tests

on:
  pull_request:
    branches:
      - '**:**'
    paths:
      - 'composer.json'
      - 'phpunit.xml.dist'
      - 'phpstan.neon.dist'
      - 'src/**/*.php'
      - 'tests/**/*.php'
  push:
    tags-ignore:
      - '**'
    paths:
      - 'composer.json'
      - 'phpunit.xml.dist'
      - 'phpstan.neon.dist'
      - 'src/**/*.php'
      - 'tests/**/*.php'
  workflow_dispatch:

jobs:
  tests:
    name: PHP ${{ matrix.php }} (${{ matrix.dependencies }})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php:
          - "7.4"
          - "8.0"
          - "8.1"
        dependencies:
          - "lowest"
          - "highest"

    env:
      extensions: ctype, dom, grpc, json, mbstring, openssl, xml, zip, zlib
      key: cache-unit-6x-${{ matrix.php }}-${{ matrix.dependencies }}-v1

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          key: ${{ env.key }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          tools: composer, pecl
          coverage: xdebug

      - uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "${{ matrix.composer-options }}"

      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: Run PHPStan
        if: matrix.stability == 'prefer-stable'
        run: vendor/bin/phpstan analyse --no-progress

      - name: Setup Problem Matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Run PHPUnit
        run: vendor/bin/phpunit --testsuite=unit --coverage-clover=coverage.xml --log-junit=test-report.xml --verbose

      - name: Upload code coverage
        uses: codecov/codecov-action@v2
        with:
          flags: unit
