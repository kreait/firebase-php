name: Tests

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  tests:
    name: PHP ${{ matrix.php }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php: ["7.2", "7.3", "7.4", "8.0"]
        stability: ["prefer-stable"]

    env:
      extensions: ctype, dom, grpc, json, mbstring, openssl, xml, zip, zlib
      key: cache-v6 # can be any string, change to clear the extension cache.

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-env
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          key: ${{ env.key }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-env.outputs.dir }}
          key: ${{ steps.cache-env.outputs.key }}
          restore-keys: ${{ steps.cache-env.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          tools: composer, pecl
          coverage: xdebug

      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.php }}-v6-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-${{ matrix.php }}-composer-

      - name: Install dependencies (stable)
        run: composer update --${{ matrix.stability }} --prefer-dist --no-interaction --no-suggest --no-progress

      - name: Run PHPStan
        if: matrix.php == '7.4'
        run: vendor/bin/phpstan analyse --no-progress

      - name: Setup Problem Matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Run PHPUnit
        run: vendor/bin/phpunit --testsuite=unit --coverage-clover=coverage.xml --log-junit=test-report.xml

      - name: Upload code coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unit

#      - name: Roave BC Check
#        if: matrix.php == '7.4'
#        run: |
#          composer require --dev "roave/backward-compatibility-check:dev-master"
#          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
#          vendor/bin/roave-backward-compatibility-check

  php-cs-fixer:
    name: PHP-CS-Fixer
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - uses: actions/checkout@v2
      - name: PHP-CS-Fixer
        uses: docker://oskarstark/php-cs-fixer-ga
        with:
          args: --diff --dry-run
